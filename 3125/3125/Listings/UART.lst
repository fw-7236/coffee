C51 COMPILER V9.54   UART                                                                  02/10/2021 18:06:16 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\UART.obj
COMPILER INVOKED BY: F:\keil\C51\BIN\C51.EXE UART.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\3126) DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\UART.lst) OBJECT(.\Objects\UART.obj)

line level    source

   1          #include "OB38R08T1.h"
   2          #include "UART0.h"
   3          unsigned char GetBufSize(void);
   4          
   5          //===============================================================
   6          //DEFINITIONs
   7          //===============================================================
   8          #define d_S0RELH        0x03
   9          #define d_S0RELL        0xCC
  10          
  11          #define BUF_SIZE  128
  12          //接收寄存器
  13          unsigned char           gBUartRxdReadCount=0;
  14          unsigned char           gBUartRxdByteCount=0;
  15          unsigned char           xdata gBUartRxdBuf[BUF_SIZE];           //***一帧最多收64个字节
  16          //===============================================================
  17          //GLOBAL VARIABLE
  18          //===============================================================
  19          bit bU0TX = 0;
  20          
  21          //=========================================================================
  22          void init_UART0(void)
  23          {
  24   1          S0RELH   = d_S0RELH;
  25   1          S0RELL   = d_S0RELL;
  26   1          AUX     |= 0x80;            // BRS = 1
  27   1          PCON    |= 0x80;            // SMOD =1
  28   1          IEN0    |= 0x90;            // EA=1, ES0=1, interrupt enable
  29   1          S0CON    = 0x50;            // mode 1, SM20=0, Revice enable
  30   1          TI       = 0;
  31   1      }
  32          
  33          void UART0_ISR(void) interrupt d_UART0_Vector
  34          {
  35   1          if (RI)                     // INT_RX
  36   1          {
  37   2              RI = 0;                 // RI clear
  38   2                  gBUartRxdBuf[gBUartRxdByteCount] = S0BUF;         // Read BUF, user code...
  39   2                  gBUartRxdByteCount++;
  40   2                      if(gBUartRxdByteCount>=BUF_SIZE)
  41   2                       gBUartRxdByteCount=0;
  42   2          }
  43   1          else                        // INT_TX
  44   1          {
  45   2              bU0TX  = 0;
  46   2              TI     = 0;             // TI clear
  47   2          }
  48   1      }
  49          
  50          void UART0_TX(unsigned char n_temp0)
  51          {
  52   1          bU0TX = 1;
  53   1          S0BUF = n_temp0;
  54   1          while(bU0TX)
C51 COMPILER V9.54   UART                                                                  02/10/2021 18:06:16 PAGE 2   

  55   1          {
  56   2              ;
  57   2          }
  58   1      }
  59          //***************************************************************************
  60          unsigned char GetBufSize(void)
  61          {
  62   1         unsigned char BSize=0;
  63   1         if(gBUartRxdByteCount>=gBUartRxdReadCount)
  64   1         {
  65   2               BSize=gBUartRxdByteCount-gBUartRxdReadCount;
  66   2         }
  67   1         else
  68   1         {
  69   2                BSize=(BUF_SIZE-gBUartRxdReadCount)+gBUartRxdByteCount;
  70   2         }
  71   1         return BSize;
  72   1      }
  73          //*************************************************************************
  74          unsigned char GetBufData(void)
  75          {
  76   1        unsigned char reData=0;
  77   1        if(gBUartRxdReadCount!=gBUartRxdByteCount)
  78   1        {
  79   2              reData=gBUartRxdBuf[gBUartRxdReadCount];
  80   2              gBUartRxdReadCount++;
  81   2              if(gBUartRxdReadCount>=BUF_SIZE)
  82   2                      gBUartRxdReadCount=0;
  83   2              
  84   2        }
  85   1        else  
  86   1        { 
  87   2                      reData=0;
  88   2              }
  89   1              return reData;
  90   1      }
  91          //********************************************************************************************


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    142    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    128    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
