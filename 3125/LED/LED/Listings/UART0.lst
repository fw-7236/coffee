C51 COMPILER V9.54   UART0                                                                 03/19/2021 09:02:31 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART0
OBJECT MODULE PLACED IN .\Objects\UART0.obj
COMPILER INVOKED BY: F:\keil\C51\BIN\C51.EXE user\UART0.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\U
                    -ART0.lst) OBJECT(.\Objects\UART0.obj)

line level    source

   1          #include "OB38R08T1.h"
   2          #include "UART0.h"
   3          
   4          //===============================================================
   5          //DEFINITIONs
   6          //===============================================================
   7          #define d_S0RELH        0x03
   8          #define d_S0RELL        0xCC
   9          
  10          #define BUF_SIZE  64
  11          //接收寄存器
  12          unsigned char   xdata   gBUartRxdReadCount=0;
  13          unsigned char   xdata   gBUartRxdByteCount=0;
  14          unsigned char   xdata   gBUartRxdBuf[BUF_SIZE];         //***一帧最多收64个字节
  15          //===============================================================
  16          //GLOBAL VARIABLE
  17          //===============================================================
  18          bit bU0TX = 0;
  19          
  20          //=========================================================================
  21          void init_UART0(void)
  22          {
  23   1          S0RELH   = d_S0RELH;
  24   1          S0RELL   = d_S0RELL;
  25   1          AUX     |= 0x80;            // BRS = 1
  26   1          PCON    |= 0x80;            // SMOD =1
  27   1          IEN0    |= 0x90;            // EA=1, ES0=1, interrupt enable
  28   1          S0CON    = 0x50;            // mode 1, SM20=0, Revice enable
  29   1          TI       = 0;
  30   1      }
  31          
  32          void UART0_ISR(void) interrupt d_UART0_Vector
  33          {
  34   1          if (RI)                     // INT_RX
  35   1          {
  36   2              RI = 0;                 // RI clear
  37   2              gBUartRxdBuf[gBUartRxdByteCount] = S0BUF;         // Read BUF, user code...
  38   2              gBUartRxdByteCount++;
  39   2              if(gBUartRxdByteCount>=BUF_SIZE)
  40   2                  gBUartRxdByteCount=0;
  41   2          }
  42   1          else                        // INT_TX
  43   1          {
  44   2              bU0TX  = 0;
  45   2              TI     = 0;             // TI clear
  46   2          }
  47   1      }
  48          
  49          void UART0_TX(unsigned char n_temp0)
  50          {
  51   1          bU0TX = 1;
  52   1          S0BUF = n_temp0;
  53   1          while(bU0TX)
  54   1          {
C51 COMPILER V9.54   UART0                                                                 03/19/2021 09:02:31 PAGE 2   

  55   2              ;
  56   2          }
  57   1      }
  58          
  59          //***************************************************************************
  60          unsigned char GetBufSize(void)
  61          {
  62   1          unsigned char BSize=0;
  63   1          if(gBUartRxdByteCount>=gBUartRxdReadCount)
  64   1          {
  65   2              BSize=gBUartRxdByteCount-gBUartRxdReadCount;
  66   2          }
  67   1          else
  68   1          {
  69   2              BSize=(BUF_SIZE-gBUartRxdReadCount)+gBUartRxdByteCount;
  70   2          }
  71   1          return BSize;
  72   1      }
  73          //************************************************************************
  74          unsigned char BufSizeClear(void)
  75          {
  76   1          gBUartRxdByteCount=0;
  77   1          gBUartRxdReadCount=0;
  78   1          return 0;
  79   1      }
  80          
  81          //*************************************************************************
  82          unsigned char GetBufData(void)
  83          {
  84   1          unsigned char reData=0;
  85   1          if(gBUartRxdReadCount!=gBUartRxdByteCount)
  86   1          {
  87   2              reData=gBUartRxdBuf[gBUartRxdReadCount];
  88   2              gBUartRxdReadCount++;
  89   2              if(gBUartRxdReadCount>=BUF_SIZE)
  90   2                  gBUartRxdReadCount=0;
  91   2          }
  92   1          else
  93   1          {
  94   2              reData=0;
  95   2          }
  96   1          return reData;
  97   1      }
  98          //********************************************************************************************


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    168    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     66    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
